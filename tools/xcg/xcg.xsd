<?xml version="1.0" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="qualified">
	<xs:annotation>
		<xs:documentation xml:lang="en">
Schema for XCG libxml2 Code Generator
Copyright 2004 Russell E. Gibson
		</xs:documentation>
	</xs:annotation>
<!-- REPLACEMENT -->
	<xs:attributeGroup name="restrictionAttributes">
		<xs:annotation>
			<xs:documentation>
These attributes can be applied to replacement elements, and modify the behavior
of the element.
			</xs:documentation>
		</xs:annotation>
		<xs:attribute name="text" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>
This required attribute specifies that actual character, string, or pattern to
match for replacement.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="fail" type="xs:boolean" use="optional" default="false">
			<xs:annotation>
				<xs:documentation>
This optional attribute specifies whether to report a failure when the search
character, string, or pattern is found.  If unspecified, the default is false.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="context" use="optional" default="global">
			<xs:simpleType>
				<xs:annotation>
					<xs:documentation>
This optional attribute determines where the character, string, or pattern seach
will be used.  When not specified, the context is "global".
					</xs:documentation>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:enumeration value="global">
						<xs:annotation>
							<xs:documentation>
Replacement will be used through all phases.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="attribute">
						<xs:annotation>
							<xs:documentation>
Replacement will be used only within attribute names, through all phases.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="element">
						<xs:annotation>
							<xs:documentation>
Replacement will be used only within element names, through all phases.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="phase">
						<xs:annotation>
							<xs:documentation>
Replacement will be used only within specified phase.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="attribute+phase">
						<xs:annotation>
							<xs:documentation>
Replacement will be used only within attribtues, duing the specified phase.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="element+phase">
						<xs:annotation>
							<xs:documentation>
Replacement will be used only within elements, during the specified phase.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="phase" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>
This attribute is required to exist if the context attribute is set to any of
the phase specific values.  Its value is set to the phase that the context
is used in.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:attributeGroup>
<!--************************************************************************-->
	<xs:element name="replacements">
		<xs:annotation>
			<xs:documentation>
This element should be present if the generated code will be used in an
environment where keywords exist, or if there are certian words, characters,
or patterns that need to be changed within the attribute and element names.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice maxOccurs="unbounded" minOccurs="0">
				<xs:element name="char">
					<xs:annotation>
						<xs:documentation>
Represents replacement of a single character.  The replacement can consist of a
character or string.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attributeGroup ref="restrictionAttributes"/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="pattern">
					<xs:annotation>
						<xs:documentation>
Represents a regular expression pattern.  The replacement text can also contain
a regular expression (for exmaple, to use sub-grouping).
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attributeGroup ref="restrictionAttributes"/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
				<xs:element name="string">
					<xs:annotation>
						<xs:documentation>
Represents a straight literal string for string replacement.
						</xs:documentation>
					</xs:annotation>
					<xs:complexType>
						<xs:simpleContent>
							<xs:extension base="xs:string">
								<xs:attributeGroup ref="restrictionAttributes"/>
							</xs:extension>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:complexType>
	</xs:element>
<!--************************************************************************-->
<!-- CONSTANTS *************************************************************-->
<!--************************************************************************-->
	<xs:element name="constants">
		<xs:annotation>
			<xs:documentation>
Predefined substitures to use within a template.  Add these to a template in
the same format that attributes and children are added.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence minOccurs="0" maxOccurs="unbounded">
				<xs:element name="constant">
					<xs:complexType>
						<xs:attribute name="name" use="required"/>
						<xs:simpleContent>
							<xs:extension base="xs:string"/>
						</xs:simpleContent>
					</xs:complexType>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
<!--************************************************************************-->
<!-- TEMPLATES *************************************************************-->
<!--************************************************************************-->

	<xs:element name="repeat">
	</xs:element>
	
	<xs:element name="code">
		<xs:complexType>
			<xs:attribute name="onlyIfAtLeastOne" type="xs:boolean" use="optional" default="false"/>
			<xs:attribute name="onlyIfMoreThanOne" type="xs:boolean" use="optional" default="false"/>
			<xs:simpleContent>
				<xs:extension base="xs:string"/>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>

	<xs:element name="children">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="code" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="attribute">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="code" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name="template">
		<xs:complexType>
			<xs:choice maxOccurs="unbounded" minOccurs="0">
				<xs:element ref="children"/>
				<xs:element ref="attribute"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="templates">
		<xs:complexType>
			<xs:sequence minOccurs="1" maxOccurs="unbounded">
				<xs:element ref="template"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
<!-- PHASES ****************************************************************-->
	<xs:element name="phases">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="phase" minOccurs="1" maxOccurs="unbounded">
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:element name="phase" minOccurs="0" maxOccurs="unbounded">
		<xs:complexType>
			<xs:attribute name="file" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
<!-- ATTRIBUTE *************************************************************-->
<!-- ELEMENT ***************************************************************-->
<!-- PHASES ****************************************************************-->
<!-- COPYRIGHT *************************************************************-->
<!-- GENERATOR *************************************************************-->
	<xs:element name="generator">
		<xs:complexType>
			<xs:choice maxOccurs="1" minOccurs="0">
				<xs:element ref="replacements"/>
				<xs:element ref="templates"/>
				<xs:element ref="constants"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
</xs:schema>
